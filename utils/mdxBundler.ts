import fs from 'fs';
import { bundleMDX } from 'mdx-bundler';
// Remark packages
import remarkGfm from 'remark-gfm'; // Tables, footnotes, strikethrough, task lists, literal URLs.
// Rehype packages
import rehypePrismPlus from 'rehype-prism-plus'

export async function getMdxData(mdxFilePath: string) {
  const fileContent = fs.readFileSync(mdxFilePath, 'utf-8');

  const { code, ...rest } = await bundleMDX({
    source: fileContent,
    mdxOptions(options) {
      // this is the recommended way to add custom remark/rehype plugins:
      // The syntax might look weird, but it protects you in case we add/remove
      // plugins in the future.
      options.remarkPlugins = [...(options.remarkPlugins ?? []), remarkGfm];
      options.rehypePlugins = [...(options.rehypePlugins ?? []), rehypePrismPlus];

      return options;
    },
  });

  return { code: replaceGfmFootnote(code), ...rest };
}

export type MDXDate = Awaited<ReturnType<typeof getMdxData>>;

/**
 * Convert h2 header 'Footnotes' generated by Gfm to Chinese '注脚'
 * @param code Compiled code
 */
function replaceGfmFootnote(code: string) {
  return code.replace(/(id:"footnote-label".*children:")(\w+)(")/, '$1注脚$3');
}
